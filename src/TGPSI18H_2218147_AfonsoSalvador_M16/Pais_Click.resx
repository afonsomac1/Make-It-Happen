<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAARBSURBVFhH7VdbbxtFFA53gYRASPAC4oHrGwIh8U/4C7whkYq6XnttLyKCOvHu2hvaxpfdtddO
        Ujlu7ECcpKna0via4LROKGkRoqX0kpSCWiLbcRPHwzlmEiG0imp7Y1eCT/okS3t8zqeZM2e+6flPwuSU
        3z7kUli7Ryva3Notq6iWkPjb7glfwG8M73uLhncOZj7wnt2tZUFY2T+RqpxcvkHmfr5LFm5uNIi/Z5av
        E/xm82gV1qNlLP2+d+nf9w8cxz3OujWffTBSOpG9VL9wZ5ss/UH2JMZA7LZdCsPKBo9hDprOWHCi+jzn
        Ceel47OVxdtbumL24uLtTeIZPVlxSOHcocPe52haY/CR1/sE6wnNK8lstahT/EFZ/L1O5MlMlXWHcpiT
        pm8frKhp0uhMGQvoFW6GmMM9Ml2Bg6TS9O3B5Ax8AP1TLqxt6hZshYXV+8QuaWWzy/8+LdM6OCm8kMj/
        WNcr1A7juct1TopkaZnWgDPMLkVKRmztv4k58WSbhcAbtFzzsPCqTUlmqnoFjKA8md6w8ApDyzUPGAnf
        zSxd101uBKeLvxKHFJmn5ZqH3RNaTV/9Uze5EUxduQfbHLpJyzUPhleqOGD1khtBnAywxVVarnk89ALh
        or+VvnpPN7kRTF25S2yecOtbDCOm8FAfEsalmNAy6SU3gr7EXJnh5QO0XPP4e1Br5eID2KpmiTYM/WRb
        gxoBxjQTy1za1ivSDmPplRr0+Bwt0zoa7hmupP0wC5YB/zu0THuwCGraPTxdN8puiZGpdasQ9ND07YER
        ZLNDCpWd/hhRkzlihGGF3kt9GI0+Rku0Diuvip/B+yORWiJfZ5bJYd8YmM2ZequWH3ZhHdx0qn3LT8gj
        VkEZ7Ds6UpoAYVPzK2T83HkCj54yuOtvu/poggSPgrhg39BoCVcNxcVTRRwJJWZA/gRj9J6dmV/Wyfnf
        ag3i7315djaelaIa/9IXLU1mLzbETaSXQBwYS1F10LBdHOz3vs7w6gFuMJLGK4txyVtIEHXD8dVwyiwo
        vWZReY2Gt4ePJekpVgye6pdj5ckcFQcriD0IpmGAhnUHvUL0adYdPMeH4pVk/oeGuG+y35PPj4yUWF6V
        aFh3YHLKz1pFtSBoE5Xk/I64i6Tv6GgJLL+KB4aGdh69QuAFGJgrg8NTG0kQhuJwe7EHrbwyjgeGhnYe
        zBfKiyDup6Gx2fsoDInb6wzEymAiZw19+TcLqxB6GU7rtaGxU5s74qZAHB9MlGDEnOW46JM0tPPAYw8i
        1gKJs1u7KwfEHoSeW+A47zM0tPOAK+ZVq6CuyYkz27srBzxyfLoCoi9jT9LQ7sAmhvKB+OnaP8VhD7KC
        eu3TgWMv0bDuASx8FUfIjjj/+JlNGMKrJqf/FRrSXcDByMOK1XCU+E+crsG23jHsKjICKAZELppdgRrr
        VgsH+9U36af/sTd6ev4COULqFVQGEU0AAAAASUVORK5CYII=
</value>
  </data>
</root>